<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coldairarrow.Business</name>
    </assembly>
    <members>
        <member name="T:Coldairarrow.Business.BaseBusiness`1">
            <summary>
            描述：业务处理基类
            作者：Coldairarrow
            </summary>
            <typeparam name="T">泛型约束（数据库实体）</typeparam>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="conStr">连接名或连接字符串</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.#ctor(System.String,Coldairarrow.Util.DatabaseType)">
            <summary>
            构造函数
            </summary>
            <param name="conStr">连接名或连接字符串</param>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="P:Coldairarrow.Business.BaseBusiness`1.Service">
            <summary>
            底层仓储接口,支持跨表操作
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.BeginTransaction">
            <summary>
            开始事物
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开始事物
            注:自定义事物级别
            </summary>
            <param name="isolationLevel">事物级别</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.EndTransaction">
            <summary>
            结束事物
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Coldairarrow#DataRepository#ITransaction#CommitTransaction">
            <summary>
            提交事物
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Coldairarrow#DataRepository#ITransaction#RollbackTransaction">
            <summary>
            回滚事物
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Insert(`0)">
            <summary>
            添加数据
            </summary>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Insert(System.Collections.Generic.List{`0})">
            <summary>
            添加多条数据
            </summary>
            <param name="entities">实体对象集合</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>
            批量添加数据,速度快
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.DeleteAll">
            <summary>
            删除所有数据
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete(System.String)">
            <summary>
            删除指定主键数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            通过主键删除多条数据
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete(`0)">
            <summary>
            删除单条数据
            </summary>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete(System.Collections.Generic.List{`0})">
            <summary>
            删除多条数据
            </summary>
            <param name="entities">实体对象集合</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            删除指定条件数据
            </summary>
            <param name="condition">筛选条件</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Delete_Sql(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            使用SQL语句按照条件删除数据
            用法:Delete_Sql"Base_User"(x=&gt;x.Id == "Admin")
            注：生成的SQL类似于DELETE FROM [Base_User] WHERE [Name] = 'xxx' WHERE [Id] = 'Admin'
            </summary>
            <param name="where">条件</param>
            <returns>
            影响条数
            </returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Update(`0)">
            <summary>
            更新一条数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            更新多条数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="entities">数据列表</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.UpdateAny(`0,System.Collections.Generic.List{System.String})">
            <summary>
            更新一条数据,某些属性
            </summary>
            <param name="entity">实体对象</param>
            <param name="properties">需要更新的字段</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.UpdateAny(System.Collections.Generic.List{`0},System.Collections.Generic.List{System.String})">
            <summary>
            更新多条数据,某些属性
            </summary>
            <param name="entities">数据列表</param>
            <param name="properties">需要更新的字段</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
            <summary>
            指定条件更新
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="whereExpre">筛选表达式</param>
            <param name="set">更改属性回调</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.UpdateWhere_Sql(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.ValueTuple{System.String,System.Object}[])">
            <summary>
            使用SQL语句按照条件更新
            用法:UpdateWhere_Sql"Base_User"(x=&gt;x.Id == "Admin",("Name","小明"))
            注：生成的SQL类似于UPDATE [TABLE] SET [Name] = 'xxx' WHERE [Id] = 'Admin'
            </summary>
            <param name="where">筛选条件</param>
            <param name="values">字段值设置</param>
            <returns>
            影响条数
            </returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetEntity(System.Object[])">
            <summary>
            获取实体
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="keyValue">主键</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetList">
            <summary>
            获取表的所有数据，当数据量很大时不要使用！
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetIQueryable">
            <summary>
            获取实体对应的表，延迟加载，主要用于支持Linq查询操作
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetPagination``1(System.Linq.IQueryable{``0},Coldairarrow.Util.Pagination)">
            <summary>
            获取分页后的数据
            </summary>
            <typeparam name="U">实体类型</typeparam>
            <param name="query">数据源IQueryable</param>
            <param name="pagination">分页参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetPagination``1(System.Linq.IQueryable{``0},System.Int32,System.Int32,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            获取分页后的数据
            </summary>
            <typeparam name="U">实体参数</typeparam>
            <param name="query">IQueryable数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageRows">每页行数</param>
            <param name="orderColumn">排序列</param>
            <param name="orderType">排序类型</param>
            <param name="count">总记录数</param>
            <param name="pages">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetDataTableWithSql(System.String)">
            <summary>
            通过Sql查询返回DataTable
            </summary>
            <param name="sql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetDataTableWithSql(System.String,System.Collections.Generic.List{System.Data.Common.DbParameter})">
            <summary>
            通过Sql参数查询返回DataTable
            </summary>
            <param name="sql">Sql语句</param>
            <param name="parameters">查询参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetListBySql``1(System.String)">
            <summary>
            通过sql返回List
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sqlStr">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.GetListBySql``1(System.String,System.Collections.Generic.List{System.Data.Common.DbParameter})">
            <summary>
            通过sql返回list
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="sqlStr">sql语句</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.ExecuteSql(System.String)">
            <summary>
            执行Sql语句
            </summary>
            <param name="sql">Sql语句</param>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Success">
            <summary>
            返回成功
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Success(System.String)">
            <summary>
            返回成功
            </summary>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Success(System.Object)">
            <summary>
            返回成功
            </summary>
            <param name="data">返回的数据</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Success(System.String,System.Object)">
            <summary>
            返回成功
            </summary>
            <param name="msg">返回的消息</param>
            <param name="data">返回的数据</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Error">
            <summary>
            返回错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Error(System.String)">
            <summary>
            返回错误
            </summary>
            <param name="msg">错误提示</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.BuildSelectResult(System.String,System.String,System.String,System.String)">
            <summary>
            构建前端Select远程搜索数据
            </summary>
            <param name="selectedValueJson">已选择的项，JSON数组</param>
            <param name="q">查询关键字</param>
            <param name="textFiled">文本字段</param>
            <param name="valueField">值字段</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.BaseBusiness`1.Dispose">
            <summary>
            执行与释放或重置非托管资源关联的应用程序定义的任务。
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_AppSecretBusiness.GetTheData(System.String)">
            <summary>
            获取指定的单条数据
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_AppSecretBusiness.AddData(Coldairarrow.Entity.Base_SysManage.Base_AppSecret)">
            <summary>
            添加数据
            </summary>
            <param name="newData">数据</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_AppSecretBusiness.UpdateData(Coldairarrow.Entity.Base_SysManage.Base_AppSecret)">
            <summary>
            更新数据
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_AppSecretBusiness.DeleteData(System.Collections.Generic.List{System.String})">
            
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_AppSecretBusiness.SavePermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            保存权限
            </summary>
            <param name="appId">应用Id</param>
            <param name="permissions">权限值</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_DatabaseLinkBusiness.GetTheData(System.String)">
            <summary>
            获取指定的单条数据
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_DatabaseLinkBusiness.AddData(Coldairarrow.Entity.Base_SysManage.Base_DatabaseLink)">
            <summary>
            添加数据
            </summary>
            <param name="newData">数据</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_DatabaseLinkBusiness.UpdateData(Coldairarrow.Entity.Base_SysManage.Base_DatabaseLink)">
            <summary>
            更新数据
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_SysLogBusiness.GetLogList(Coldairarrow.Util.Pagination,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            获取日志列表
            </summary>
            <param name="logContent">日志内容</param>
            <param name="logType">日志类型</param>
            <param name="level">日志级别</param>
            <param name="opUserName">操作人用户名</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="pagination">分页参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_SysRoleBusiness.GetTheData(System.String)">
            <summary>
            获取指定的单条数据
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_SysRoleBusiness.AddData(Coldairarrow.Entity.Base_SysManage.Base_SysRole)">
            <summary>
            添加数据
            </summary>
            <param name="newData">数据</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_SysRoleBusiness.UpdateData(Coldairarrow.Entity.Base_SysManage.Base_SysRole)">
            <summary>
            更新数据
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.Base_SysRoleBusiness.SavePermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            保存权限
            </summary>
            <param name="roleId">角色Id</param>
            <param name="permissions">权限值</param>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.PermissionManage">
            <summary>
            权限管理静态类
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetAllPermissionValues">
            <summary>
            获取所有权限值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetRolePermissionModules(System.String)">
            <summary>
            获取角色权限模块
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetAppIdPermissionModules(System.String)">
            <summary>
            获取AppId权限模块
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetAppIdPermissionValues(System.String)">
            <summary>
            获取AppId权限值
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.SetAppIdPermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            设置AppId权限
            </summary>
            <param name="appId">AppId</param>
            <param name="permissions">权限值列表</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetUserPermissionModules(System.String)">
            <summary>
            获取用户权限模块
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetUserPermissionValues(System.String)">
            <summary>
            获取用户拥有的所有权限值
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.SetUserPermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            设置用户权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="permissions">权限值列表</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.ClearUserPermissionCache">
            <summary>
            清除所有用户权限缓存
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.GetOperatorPermissionValues">
            <summary>
            获取当前操作者拥有的所有权限值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.PermissionManage.OperatorHasPermissionValue(System.String)">
            <summary>
            判断当前操作者是否拥有某项权限值
            </summary>
            <param name="value">权限值</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.RapidDevelopmentBusiness.GetAllDbLink">
            <summary>
            获取所有数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.RapidDevelopmentBusiness.GetDbTableList(System.String)">
            <summary>
            获取数据库所有表
            </summary>
            <param name="linkId">数据库连接Id</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.RapidDevelopmentBusiness.BuildCode(System.String,System.String,System.String,System.String)">
            <summary>
            生成代码
            </summary>
            <param name="linkId">连接Id</param>
            <param name="areaName">区域名</param>
            <param name="tables">表列表</param>
            <param name="buildType">需要生成类型</param>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.SystemMenuManage">
            <summary>
            系统菜单管理
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.SystemMenuManage.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.SystemMenuManage.GetAllSysMenu">
            <summary>
            获取系统所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.SystemMenuManage.GetOperatorMenu">
            <summary>
            获取用户菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.UrlPermissionManage.GetAllUrlPermissions">
            <summary>
            获取所有URL需要的权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.IDataPermission">
            <summary>
            数据权限控制接口
            </summary>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.IPermissionManage">
            <summary>
            权限管理接口
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetAllPermissionValues">
            <summary>
            获取所有权限值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetRolePermissionModules(System.String)">
            <summary>
            获取角色权限模块
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetAppIdPermissionModules(System.String)">
            <summary>
            获取AppId权限模块
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetAppIdPermissionValues(System.String)">
            <summary>
            获取AppId权限值
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.SetAppIdPermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            设置AppId权限
            </summary>
            <param name="appId">AppId</param>
            <param name="permissions">权限值列表</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetUserPermissionModules(System.String)">
            <summary>
            获取用户权限模块
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetUserPermissionValues(System.String)">
            <summary>
            获取用户拥有的所有权限值
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.SetUserPermission(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            设置用户权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="permissions">权限值列表</param>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.ClearUserPermissionCache">
            <summary>
            清除所有用户权限缓存
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.GetOperatorPermissionValues">
            <summary>
            获取当前操作者拥有的所有权限值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IPermissionManage.OperatorHasPermissionValue(System.String)">
            <summary>
            判断当前操作者是否拥有某项权限值
            </summary>
            <param name="value">权限值</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IRapidDevelopmentBusiness.GetAllDbLink">
            <summary>
            获取所有数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IRapidDevelopmentBusiness.GetDbTableList(System.String)">
            <summary>
            获取数据库所有表
            </summary>
            <param name="linkId">数据库连接Id</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IRapidDevelopmentBusiness.BuildCode(System.String,System.String,System.String,System.String)">
            <summary>
            生成代码
            </summary>
            <param name="linkId">连接Id</param>
            <param name="areaName">区域名</param>
            <param name="tables">表列表</param>
            <param name="buildType">需要生成类型</param>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.ISystemMenuManage">
            <summary>
            系统菜单管理
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.ISystemMenuManage.GetAllSysMenu">
            <summary>
            获取系统所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.ISystemMenuManage.GetOperatorMenu">
            <summary>
            获取用户菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Base_SysManage.IUrlPermissionManage.GetAllUrlPermissions">
            <summary>
            获取所有URL需要的权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:Coldairarrow.Business.Base_SysManage.ActionPermission">
            <summary>
            URL接口权限
            </summary>
        </member>
        <member name="T:Coldairarrow.Business.Operator">
            <summary>
            操作者
            </summary>
        </member>
        <member name="P:Coldairarrow.Business.Operator.UserId">
            <summary>
            当前操作者UserId
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Operator.Logged">
            <summary>
            是否已登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Operator.Login(System.String)">
            <summary>
            登录
            </summary>
            <param name="userId">用户逻辑主键Id</param>
        </member>
        <member name="M:Coldairarrow.Business.Operator.Logout">
            <summary>
            注销
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.Operator.IsAdmin">
            <summary>
            判断是否为超级管理员
            </summary>
            <returns></returns>
        </member>
        <member name="T:Coldairarrow.Business.IBaseBusiness`1">
            <summary>
            业务逻辑
            </summary>
            <typeparam name="T">实体泛型</typeparam>
            <seealso cref="T:Coldairarrow.DataRepository.ITransaction" />
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Insert(`0)">
            <summary>
            添加数据
            </summary>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Insert(System.Collections.Generic.List{`0})">
            <summary>
            添加多条数据
            </summary>
            <param name="entities">实体对象集合</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>
            批量添加数据,速度快
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.DeleteAll">
            <summary>
            删除所有数据
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete(System.String)">
            <summary>
            删除指定主键数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            通过主键删除多条数据
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete(`0)">
            <summary>
            删除单条数据
            </summary>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete(System.Collections.Generic.List{`0})">
            <summary>
            删除多条数据
            </summary>
            <param name="entities">实体对象集合</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            删除指定条件数据
            </summary>
            <param name="condition">筛选条件</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Delete_Sql(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Deletes the SQL.
            </summary>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Update(`0)">
            <summary>
            更新单条数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            更新多条数据
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.UpdateAny(`0,System.Collections.Generic.List{System.String})">
            <summary>
            更新单条数据指定属性
            </summary>
            <param name="entity">实体对象</param>
            <param name="properties">属性</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.UpdateAny(System.Collections.Generic.List{`0},System.Collections.Generic.List{System.String})">
            <summary>
            更新多条数据执行属性
            </summary>
            <param name="entities">实体对象集合</param>
            <param name="properties">属性</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
            <summary>
            通过条件更新数据
            </summary>
            <param name="whereExpre">筛选条件</param>
            <param name="set">更新操作</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.UpdateWhere_Sql(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.ValueTuple{System.String,System.Object}[])">
            <summary>
            使用SQL语句按照条件更新
            用法:UpdateWhere_Sql"Base_User"(x=>x.Id == "Admin",("Name","小明"))
            注：生成的SQL类似于UPDATE [TABLE] SET [Name] = 'xxx' WHERE [Id] = 'Admin'
            </summary>
            <param name="where">筛选条件</param>
            <param name="values">字段值设置</param>
            <returns>影响条数</returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetEntity(System.Object[])">
            <summary>
            通过主键获取单条数据
            </summary>
            <param name="keyValue">主键</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetList">
            <summary>
            获取所有数据
            注:会获取所有数据,数据量大请勿使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetIQueryable">
            <summary>
            获取IQueryable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetDataTableWithSql(System.String)">
            <summary>
            通过SQL获取DataTable
            </summary>
            <param name="sql">SQL</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetDataTableWithSql(System.String,System.Collections.Generic.List{System.Data.Common.DbParameter})">
            <summary>
            通过SQL获取DataTable
            </summary>
            <param name="sql">SQL</param>
            <param name="parameters">参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetListBySql``1(System.String)">
            <summary>
            通过SQL获取List
            </summary>
            <typeparam name="U">泛型</typeparam>
            <param name="sqlStr">SQL</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.GetListBySql``1(System.String,System.Collections.Generic.List{System.Data.Common.DbParameter})">
            <summary>
            通过SQL获取List
            </summary>
            <typeparam name="U">泛型</typeparam>
            <param name="sqlStr">SQL</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.ExecuteSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL</param>
        </member>
        <member name="M:Coldairarrow.Business.IBaseBusiness`1.ExecuteSql(System.String,System.Collections.Generic.List{System.Data.Common.DbParameter})">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL</param>
            <param name="spList">参数</param>
        </member>
        <member name="T:Coldairarrow.Business.IOperator">
            <summary>
            操作者
            </summary>
        </member>
        <member name="P:Coldairarrow.Business.IOperator.UserId">
            <summary>
            当前操作者UserId
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.IOperator.Logged">
            <summary>
            是否已登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.IOperator.Login(System.String)">
            <summary>
            登录
            </summary>
            <param name="userId">用户逻辑主键Id</param>
        </member>
        <member name="M:Coldairarrow.Business.IOperator.Logout">
            <summary>
            注销
            </summary>
        </member>
        <member name="M:Coldairarrow.Business.IOperator.IsAdmin">
            <summary>
            判断是否为超级管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coldairarrow.Business.Logger.#cctor">
            <summary>
            配置Logger
            </summary>
        </member>
    </members>
</doc>
